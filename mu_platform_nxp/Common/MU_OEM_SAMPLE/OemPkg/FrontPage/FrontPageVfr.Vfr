//**@file FrontPage formset definitions
//
//  Copyright (c) 2015 - 2018, Microsoft Corporation.
//  
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without 
//  modification, are permitted provided that the following conditions are met:
//  1. Redistributions of source code must retain the above copyright notice,
//  this list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright notice,
//  this list of conditions and the following disclaimer in the documentation
//  and/or other materials provided with the distribution.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
//  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
//  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
//  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
//  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
//  OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
//**/

#include <Guid/MsBootMenuGuid.h>

#include "FrontPageVfr.h"


// UEFI Front Page Formset
//
formset

  // Common Formset values
  //
  guid      = FRONT_PAGE_CONFIG_FORMSET_GUID,           // Formset GUID
  title     = STRING_TOKEN(STR_FRONT_PAGE_TITLE),       // Formset title (ex: "OEM UEFI")
  help      = STRING_TOKEN(STR_NULL_STRING),            // Formset help: None
  classguid = FRONT_PAGE_CONFIG_FORMSET_GUID,           // Formset class GUID
  class     = FRONT_PAGE_CLASS,                         // Formset class
  subclass  = FRONT_PAGE_SUBCLASS,                      // Formset subclass

  /////////////////////////////////////////////////////////////////////////////
  // Form ID 0: PC Information
  //
  form formid = FRONT_PAGE_FORM_ID_PCINFO,              // PC Information form
    title  = STRING_TOKEN(STR_NULL_STRING);             // Form title: None

    // PC Information header
    //
    text
      help    = STRING_TOKEN(STR_NULL_STRING),                        // PC Information section header
      text    = STRING_TOKEN(STR_INF_VIEW_PCINFO_HEADER);             //
    text
      help    = STRING_TOKEN(STR_NULL_STRING),                        // SPACING
      text    = STRING_TOKEN(STR_NULL_STRING);                        //

    // Group PC information name-value pairs in a grid on the canvas.  Note that the number of subtitle name-value
    // pairs must match the row & column information passed in via the Grid Opcode.
      //
    guidop
      guid     = GRID_START_OPCODE_GUID,                                 // Custom UI Grid opcode - START
      datatype = UINT32,                                                         //
      data     = 70,                                                             // Grid cell height in pixels.
    endguidop;
        subtitle text = STRING_TOKEN(STR_NULL_STRING),
        flags = HORIZONTAL;
          text                                                                   //
            help    = STRING_TOKEN(STR_NULL_STRING),                             // PC Model number
            text    = STRING_TOKEN(STR_INF_VIEW_PC_MODEL);                       //
          text                                                                   //
            help    = STRING_TOKEN(STR_NULL_STRING),                             // PC Model number value
            text    = STRING_TOKEN(STR_INF_VIEW_PC_MODEL_VALUE);                 //
          text                                                                   //
            help    = STRING_TOKEN(STR_NULL_STRING),                             // Add a dummy 3rd column to move the 2nd column (values) further to the left.
            text    = STRING_TOKEN(STR_NULL_STRING);                             //
        subtitle text = STRING_TOKEN(STR_NULL_STRING),
        flags = HORIZONTAL;
          text                                                                   //
            help    = STRING_TOKEN(STR_NULL_STRING),                             // PC UUID
            text    = STRING_TOKEN(STR_INF_VIEW_PC_UUID);                        //
          text                                                                   //
            help    = STRING_TOKEN(STR_NULL_STRING),                             // PC UUID value
            text    = STRING_TOKEN(STR_INF_VIEW_PC_UUID_VALUE);                  //
        subtitle text = STRING_TOKEN(STR_NULL_STRING),
        flags = HORIZONTAL;
          text                                                                   //
            help    = STRING_TOKEN(STR_NULL_STRING),                             // PC Serial number
            text    = STRING_TOKEN(STR_INF_VIEW_PC_SERIALNUM);                   //
          text                                                                   //
            help    = STRING_TOKEN(STR_NULL_STRING),                             // PC Serial number value
            text    = STRING_TOKEN(STR_INF_VIEW_PC_SERIALNUM_VALUE);             //
        subtitle text = STRING_TOKEN(STR_NULL_STRING),
        flags = HORIZONTAL;
          text                                                                   //
            help    = STRING_TOKEN(STR_NULL_STRING),                             // PC Asset Tag
            text    = STRING_TOKEN(STR_INF_VIEW_PC_ASSET_TAG);                   //
          text                                                                   //
            help    = STRING_TOKEN(STR_NULL_STRING),                             // PC Asset Tag value
            text    = STRING_TOKEN(STR_INF_VIEW_PC_ASSET_TAG_VALUE);             //
    guidop
      guid     = GRID_END_OPCODE_GUID,                                           // Custom UI Grid opcode - END
    endguidop;

    text
      help    = STRING_TOKEN(STR_NULL_STRING),                                   // SPACING
      text    = STRING_TOKEN(STR_NULL_STRING);                                   //
    text
      help    = STRING_TOKEN(STR_NULL_STRING),                                   // SPACING
      text    = STRING_TOKEN(STR_NULL_STRING);                                   //
    text
      help    = STRING_TOKEN(STR_NULL_STRING),                                   // SPACING
      text    = STRING_TOKEN(STR_NULL_STRING);                                   //

    text
      help    = STRING_TOKEN(STR_NULL_STRING),                                   // Firmware Information section header
      text    = STRING_TOKEN(STR_INF_VIEW_FIRMWARE_HEADER);                      //
    text
      help    = STRING_TOKEN(STR_NULL_STRING),                                   // SPACING
      text    = STRING_TOKEN(STR_NULL_STRING);                                   //

    guidop
      guid     = GRID_START_OPCODE_GUID,                                         // Custom UI Grid opcode - START
      datatype = UINT32,                                                         //
      data     = 70,                                                             // Grid cell height in pixels.
    endguidop;
        label LABEL_PCINFO_FW_VERSION_TAG_START;                                 // Firmware versions
        label LABEL_PCINFO_FW_VERSION_TAG_END;                                   //
    guidop
      guid     = GRID_END_OPCODE_GUID,                                           // Custom UI Grid opcode - END
    endguidop;

  endform;

  /////////////////////////////////////////////////////////////////////////////
  // Form ID 2: Exit
  //
  form formid = FRONT_PAGE_FORM_ID_EXIT,                                                // Exit form
    title  = STRING_TOKEN(STR_NULL_STRING);                                             // Form title: None

    text
      help    = STRING_TOKEN(STR_NULL_STRING),                                          // Exit FrontPage settings header
      text    = STRING_TOKEN(STR_FP_EXIT_HEADER);                                       //
    text
      help    = STRING_TOKEN(STR_NULL_STRING),                                          // SPACING
      text    = STRING_TOKEN(STR_NULL_STRING);                                          //
    text
      help    = STRING_TOKEN(STR_NULL_STRING),                                          // Exit FrontPage settings description
      text    = STRING_TOKEN(STR_FP_EXIT_DESCRIPTION);                                  //
    text
      help    = STRING_TOKEN(STR_NULL_STRING),                                          // SPACING
      text    = STRING_TOKEN(STR_NULL_STRING);                                          //

    text
      help    = STRING_TOKEN(STR_NULL_STRING),                                          // "Restart now" button
      text    = STRING_TOKEN(STR_FP_RESTART_NOW_BUTTON),                                //
      flags   = INTERACTIVE | RESET_REQUIRED,
      key     = FRONT_PAGE_ACTION_EXIT_FRONTPAGE;
  endform;

endformset;
